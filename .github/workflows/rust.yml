name: Rust
on:
  push: {}
  release:
    types: [published]

env:
  VERSION: "0.0.0-dev"

jobs:
  version:
    name: Start Release
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Generate Package Version (Release Tag)
        shell: pwsh
        if: github.event_name == 'release'
        run: Add-Content -Path $env:GITHUB_ENV -Value "VERSION=$('${{ github.event.release.tag_name }}'.substring(1))"

      - name: Set Package Version
        run: sed -i "s/^version\s*=\s*\".*\"/version = \"$VERSION\"/g" Cargo.toml

      - name: Stash Versioned Cargo.toml
        uses: actions/upload-artifact@v4
        with:
          name: cargofile
          path: Cargo.toml

  test:
    name: Test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: llvm-tools-preview

      - name: cargo install grcov
        uses: SierraSoftworks/setup-grcov@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        run: cargo test --all-features --no-fail-fast
        env:
            RUSTFLAGS: -Cinstrument-coverage

      - name: grcov
        run: grcov . --binary-path target/debug/deps/ -s . -t lcov --ignore-not-existing --ignore '../**' --ignore '/*' --ignore 'C:/' -o ./lcov.info

      - name: codecov upload
        uses: codecov/codecov-action@v4.5.0
        with:
          files: ./lcov.info

  build:
    name: ${{ matrix.os }}-${{ matrix.arch }}-release
    runs-on: ${{ matrix.run_on }}

    needs:
      - version

    strategy:
      matrix:
        include:
          # Windows builds
          - arch: amd64
            os: windows
            run_on: windows-latest
            target: x86_64-pc-windows-msvc
            extension: .exe
            builder: cargo

          # Linux builds
          - arch: amd64
            run_on: ubuntu-latest
            os: linux
            target: x86_64-unknown-linux-gnu
            test: true
            builder: cargo
          - arch: "arm64"
            os: linux
            run_on: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            builder: cross

          # Apple MacOS builds
          - arch: amd64
            run_on: macos-latest
            os: darwin
            target: x86_64-apple-darwin
            builder: cargo
          - arch: arm64
            run_on: macos-latest
            os: darwin
            target: aarch64-apple-darwin
            builder: cargo

    steps:
      - name: Get Rust Stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          components: llvm-tools-preview
      
      - name: Setup Cache
        uses: Swatinem/rust-cache@v2

      - name: Check out code
        uses: actions/checkout@v4

      - name: Fetch Versioned Cargo.toml
        uses: actions/download-artifact@v4
        with:
          name: cargofile

      - name: Install Cross
        if: matrix.builder == 'cross'
        shell: bash
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall --no-confirm cross

      - name: cargo build
        run: ${{ matrix.builder }} build --release --target ${{ matrix.target }}

      - name: Upload GitHub Release Artifacts
        uses: SierraSoftworks/gh-releases@v1.0.7
        if: github.event_name == 'release'
        with:
          files: "target/${{ matrix.target }}/release/github-backup${{ matrix.extension }} | github-backup-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}"
          token: ${{ secrets.GITHUB_TOKEN }}
          overwrite: "true"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: github.event_name == 'push'
        with:
          name: github-backup-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
          path: target/${{ matrix.target }}/release/github-backup${{ matrix.extension }}